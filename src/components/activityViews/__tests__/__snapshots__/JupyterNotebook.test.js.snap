// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<JupyterNotebook> should check snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <JupyterNotebook
    title="test"
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <WithStyles(Typography)
          style={
                    Object {
                              "position": "relative",
                            }
          }
          variant="headline"
>
          <span>
                    test
          </span>
          <WithStyles(IconButton)
                    onClick={[Function]}
                    style={
                              Object {
                                        "position": "absolute",
                                        "right": 0,
                                      }
                    }
          >
                    <pure(ExpandMore) />
          </WithStyles(IconButton)>
</WithStyles(Typography)>,
        undefined,
        undefined,
        undefined,
      ],
      "style": Object {
        "margin": "24px 2px",
      },
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <span>
              test
</span>,
            undefined,
            <WithStyles(IconButton)
              onClick={[Function]}
              style={
                            Object {
                                          "position": "absolute",
                                          "right": 0,
                                        }
              }
>
              <pure(ExpandMore) />
</WithStyles(IconButton)>,
          ],
          "style": Object {
            "position": "relative",
          },
          "variant": "headline",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "test",
            },
            "ref": null,
            "rendered": "test",
            "type": "span",
          },
          undefined,
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <pure(ExpandMore) />,
              "onClick": [Function],
              "style": Object {
                "position": "absolute",
                "right": 0,
              },
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {},
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      undefined,
      undefined,
      undefined,
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <WithStyles(Typography)
            style={
                        Object {
                                    "position": "relative",
                                  }
            }
            variant="headline"
>
            <span>
                        test
            </span>
            <WithStyles(IconButton)
                        onClick={[Function]}
                        style={
                                    Object {
                                                "position": "absolute",
                                                "right": 0,
                                              }
                        }
            >
                        <pure(ExpandMore) />
            </WithStyles(IconButton)>
</WithStyles(Typography)>,
          undefined,
          undefined,
          undefined,
        ],
        "style": Object {
          "margin": "24px 2px",
        },
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <span>
                test
</span>,
              undefined,
              <WithStyles(IconButton)
                onClick={[Function]}
                style={
                                Object {
                                                "position": "absolute",
                                                "right": 0,
                                              }
                }
>
                <pure(ExpandMore) />
</WithStyles(IconButton)>,
            ],
            "style": Object {
              "position": "relative",
            },
            "variant": "headline",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "test",
              },
              "ref": null,
              "rendered": "test",
              "type": "span",
            },
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": <pure(ExpandMore) />,
                "onClick": [Function],
                "style": Object {
                  "position": "absolute",
                  "right": 0,
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {},
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        undefined,
        undefined,
        undefined,
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {},
  },
}
`;
